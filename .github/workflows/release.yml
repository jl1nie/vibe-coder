name: Release

on:
  push:
    tags:
      - 'v*'

env:
  NODE_VERSION: '20'
  PNPM_VERSION: '8.15.0'

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: false

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build packages
        run: pnpm build

      - name: Run tests
        run: pnpm test

      - name: Create Release
        uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract version from tag
        id: extract_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Build and push Host Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/host/Dockerfile
          push: true
          tags: |
            vibecoder/host:latest
            vibecoder/host:${{ steps.extract_version.outputs.VERSION }}
            ghcr.io/vibecoder/host:latest
            ghcr.io/vibecoder/host:${{ steps.extract_version.outputs.VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Generate release notes
        run: |
          echo "# Release Notes" > release-notes.md
          echo "" >> release-notes.md
          echo "## Docker Images" >> release-notes.md
          echo "- \`vibecoder/host:${{ steps.extract_version.outputs.VERSION }}\`" >> release-notes.md
          echo "- \`ghcr.io/vibecoder/host:${{ steps.extract_version.outputs.VERSION }}\`" >> release-notes.md

      - name: Upload release assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            packages/*/dist/*.tar.gz
            apps/*/dist/*.tar.gz
          body_path: release-notes.md