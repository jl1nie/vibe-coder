services:
  # WebSocket-only Signaling Server
  vibe-coder-signaling:
    build:
      context: .
      dockerfile: packages/signaling-ws/Dockerfile
    container_name: vibe-coder-signaling-dev
    ports:
      - "5175:5175"
    environment:
      - NODE_ENV=development
      - PORT=5175
      - HOST=0.0.0.0
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "5175"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

  # Host Server with Claude Code Integration
  vibe-coder-host:
    build:
      context: .
      dockerfile: packages/host/Dockerfile
    container_name: vibe-coder-host-dev
    ports:
      - "8080:8080"
    depends_on:
      vibe-coder-signaling:
        condition: service_healthy
    volumes:
      # Claude Code設定をマウント
      - ~/.claude:/app/.claude
      # 現在の作業ディレクトリをマウント（vibe-coderファイルの永続化用）
      - .:/app/workspace
    environment:
      - NODE_ENV=development
      - CLAUDE_CONFIG_PATH=/app/.claude
      - HOST_UID=${HOST_UID}
      - HOST_GID=${HOST_GID}
      # Vibe Coder configuration (development)
      - VIBE_CODER_PORT=8080
      - VIBE_CODER_PWA_URL=http://localhost:5174
      - VIBE_CODER_SIGNALING_URL=localhost:5175
      - VIBE_CODER_HOST_URL=http://localhost:8080
      - VIBE_CODER_CLAUDE_PATH=/usr/local/bin/claude
      - VIBE_CODER_WORKSPACE_PATH=/app/workspace
      # インタラクティブモードを有効化
      - TERM=xterm-256color
      - COLUMNS=120
      - LINES=30
    working_dir: /app
    command: ["node", "packages/host/dist/host/src/index.js"]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

# Note: PWA (port 5174) runs separately via:
# cd apps/web && pnpm dev
# This provides hot reloading and faster development experience